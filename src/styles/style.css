/* WEBFLOW: GALLERY SECTION */

/* :root {
  --dynamic-text-color: var(--MintBlack); Default to your darkest color
  --dynamic-hover-color: var(--MintDark); Default hover color 
  --dynamic-active-color: var(--MintGray); Color for active elements 
} */

/* Default state for all dynamic color elements */
/* .project-subtitle-h3,
.project-name-h1,
.project-subtitle-h2,
.paragraph-andale-mono.metadata,
.mini-heading-title.metadata,
.arrow-icon-button.grey,
.lower-nav-text.grey-ish,
.paragraph-andale-mono.navguide,
.gal-tab,
.squarecorner-unit,
.scroll-dot,
.scroll-line-project,
.gallery-scroll-card,
.tiny-tag-wrapper,
.paragraph-andale-mono.tiny-tag,
.item-card-title,
.mono-paragraph.scroll-card-subtitle,
.mono-paragraph.scroll-card-gal,
.mini-heading-title.cardmeta,
.mint-deets-button,
.item-gallery-dot,
.scroll-line-project {
  color: var(--dynamic-text-color);
  transition: color 0.3s ease, background-color 0.3s ease;
}



/* Rest of your existing styles */
body.initial-load .slider-bg_component {
  transition: none;
}

.slider-bg_component {
  transition: opacity 0.3s ease-in-out;
  opacity: 1;
  width: 100vw; /* Fixed width */
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  /* background-color: #f0f0f0;  Default background color */
}

.slider-bg_component.transitioning {
  opacity: 0;
  filter: blur(10px);
  transform: scale(1.075);
}

/* agencyâ€“>showcase tabs */

.tab[aria-selected='true'] {
  /* Active tab styles */
  background-color: #0189d7;
  color: var(--color--background);
}

/* Optional: hover styles for inactive tabs */
.tab[aria-selected='false']:hover {
  color: var(--color--accent);
}

/* hide scrollbar */

.custom-scrollbar::-webkit-scrollbar {
  width: 0px;
}

.custom-scrollbar {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

.navbar-link.show-arrow .arrow-icon {
  display: block !important; /* Force the display */
}

.disabled {
  pointer-events: none;
  opacity: 0.33;
}

/* ayw craft icon */
.ayw-craft-icon {
  clip-path: polygon(0 0, calc(100% - 11%) 0, 100% 11%, 100% 100%, 0 100%);
  border-radius: 3px;
  border-color: #eaff36;
}

/* .ayw-craft-icon {
  border-radius: 3px;
  border-color: #eaff36;
  --mask: linear-gradient(-135deg, #0000 8%, #000 0);
  -webkit-mask: var(--mask);
  mask: var(--mask);
} */

/* method dial */
.text-wrapper {
  display: inline-block;
  transform-origin: center center;
}

.method-menu-item.active .text-wrapper {
  color: #ff3d23;
}

.method-content {
  /* The mask */
  mask-image: radial-gradient(
    circle,
    black 55%,
    /* Opaque center (adjust 70% as needed) */ transparent 66%
      /* Fade to transparent at the edge */
  );
  /* Prefix for Safari/Chrome */
  -webkit-mask-image: radial-gradient(circle, black 55%, transparent 66%);
}

.panel-cover {
  /* opacity: 0; */ /* Removed - GSAP will manage */
  /* Define the transition for the opacity property */
  /* Match duration and easing with your GSAP animations if desired */
  /* transition: opacity 0.4s ease-in-out; */ /* Removed - GSAP will manage */
  /* Add pointer-events: none; if you don't want the invisible cover */
  /* to block clicks on the content below when the panel is expanded */
  /* pointer-events: none; */ /* Removed - GSAP will manage */
  /* Add any other necessary base styles (position, background, etc.) */
}

/* Active state (Panel Collapsed) */
/* .panel-cover.active { */ /* Removed - GSAP will manage this state directly */
/* opacity: 1; */
/* Restore pointer events when the cover is visible */
/* pointer-events: auto; */
/* } */

/* The parent container of the config button wrappers */
.config-buttons-container {
  /* Replace with your actual selector */
  perspective: 1000px; /* Adjust value as needed */
}

/* The config button wrappers themselves */
.ayw-config-butts-wrapper {
  /* This targets all wrappers by class */
  backface-visibility: hidden;
  /* Ensure display is handled by JS initially,
     but you might have other base styles */
  /* display: none; */ /* JS now controls display */

  /* Define the default 'active' state display if not already done */
  &.is-active {
    /* display: block; */ /* JS now controls display */
  }
}
.ayw-energycomms-day.is-on {
  /* Assuming you were changing background-color. Adjust if it's 'color' or 'border-color' etc. */
  background-color: var(--comms-active-dot-color);

  /* If you had a static color defined here before, like:
     background-color: #SomeStaticColor;
     You should remove or comment it out. */
}

/* Ensure .ayw-energycomms-day has a default background for its "off" state, e.g.: */
.ayw-energycomms-day {
  /* ... your other styles ... */
  background-color: #c6d9d1; /* Example "off" color */
  transition: background-color 0.3s ease; /* Optional: for smooth color transitions */
}

.ayw-accordion-pane-content.commitment,
.ayw-craft-details,
.ayw-read-me-wrapper {
  backdrop-filter: blur(16px);
  -webkit-mask-image: linear-gradient(
    to bottom,
    transparent 0%,
    black 5%,
    black 95%,
    transparent 100%
  );
  mask-image: linear-gradient(
    to bottom,
    transparent 0%,
    black 2%,
    black 98%,
    transparent 99%
  );
}

.scroll-line-project.commitment {
  height: 6svh;
}

.tab-text {
  pointer-events: none;
}

/* AYW Intro Modal */

/* Base state: Hidden */

/* Active state: Visible */
.ayw-intro-modal.on {
  opacity: 1;
  visibility: visible;
  /* Transition visibility immediately to visible */
  transition: opacity 0.5s ease, visibility 0s ease 0s; /* visibility: visible doesn't need a delay */
  pointer-events: auto; /* Allow clicks when visible */
}

/* When transitioning from .on to base state (.on is removed): */
/* opacity transitions from 1 to 0 over 0.5s */
/* visibility should transition from visible to hidden *after* the opacity transition */
/* To achieve this with CSS transitions only: */

/* Base state (when .on is removed) */
.ayw-intro-modal {
  opacity: 0;
  /* Make visibility hidden *after* the opacity transition is complete */
  visibility: hidden;
  transition: opacity 0.5s ease, visibility 0s linear 0.5s; /* Delay visibility: hidden until opacity transition finishes */
  pointer-events: none;
}

body::selection {
  color: #484f4f;
  background-color: #eaff36;
}

.tf-home-col-quadrant::selection {
  color: #eaff36 !important;
  background-color: #484f4f !important;
}

/* Tippy Tooltip Custom Styling */
.tippy-box[data-theme~='ayw'] {
  width: 9rem;
  background-color: #484f4f;
  padding: 0.5rem;
}

.tippy-box[data-theme~='ayw'] .tippy-content {
  color: #eaff36;
  font-family: 'Andale Mono', 'AndaleMono', 'Liberation Mono',
    'DejaVu Sans Mono', monospace;
  font-size: 0.6rem;
  line-height: 0.8rem;
  padding: 0;
  margin: 0;
}

/* SVG Arrow styling for tippy.js scoped to theme */
.tippy-box[data-theme~='ayw'] > .tippy-svg-arrow {
  fill: #484f4f;
}

.ayw-phone-line-size-wrap {
  /* Your existing styles */
  transition: min-width 0.3s ease-in-out;
  /* OR for more control: */
  transition: min-width var(--transition-duration, 0.1s) ease-in-out;
}
